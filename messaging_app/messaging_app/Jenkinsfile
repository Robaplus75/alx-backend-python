pipeline {
    agent any

    environment {
        PYTHON_ENV = 'venv'
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the repository
                git url: 'git@github.com:Robaplus75/alx-backend-python.git', branch: 'main'
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    // Navigate to the messaging_app directory
                    dir('messaging_app') {
                        // Create a virtual environment
                        sh 'python3 -m venv ${PYTHON_ENV}'
                        // Activate the virtual environment and install dependencies
                        sh '. ${PYTHON_ENV}/bin/activate && pip install -r requirements.txt'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Navigate to the messaging_app directory
                    dir('messaging_app') {
                        // Activate the virtual environment and run tests
                        sh '. ${PYTHON_ENV}/bin/activate && pytest --cov --cov-report=xml:coverage.xml --cov-report=html:htmlcov --html=report.html'
                    }
                }
            }
        }

        stage('Archive Test Reports') {
            steps {
                // Archive the test reports generated by pytest
                archiveArtifacts artifacts: "messaging_app/report.html, messaging_app/coverage.xml, messaging_app/htmlcov/**", fingerprint: true
            }
        }
    }

    post {
        success {
            echo 'Tests completed successfully!'
        }
        failure {
            echo 'Tests failed. Please check the reports for details.'
        }
    }
}
